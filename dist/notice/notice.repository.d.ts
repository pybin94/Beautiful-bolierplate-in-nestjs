import { Repository } from "typeorm";
import { NoticePopup } from './entity/notice-popup.entity';
import { NoticeAdmin } from './entity/notice-admin.entity';
import { NoticeAdminUpsertDto } from './dto/notice-admin-upsert.dto';
import { NoticeUser } from './entity/notice-user.entity';
import { NoticeUserUpsertDto } from './dto/notice-user-upsert.dto';
import { NoticePopupUpsertDto } from './dto/notice-popup-upsert.dto';
import { NoticeMessageUser } from './entity/notice-message-user.entity';
import { NoticeMessageAdmin } from './entity/notice-message-admin.entity';
import { NoticeUserMessageUpsertDto } from './dto/notice-user-message-upsert.dto';
import { NoticeMessageTemplateUpsertDto } from './dto/notice-message-template-upsert.dto';
import { NoticeMessageTemplateUser } from './entity/notice-message-template-user.entity';
import { NoticeMessageTemplateAdmin } from './entity/notice-message-template-admin.entity';
import { NoticeAdminMessageUpsertDto } from './dto/notice-admin-message-upsert.dto';
export declare class NoticeRepository {
    private readonly noticePopupRepository;
    private readonly noticeUserRepository;
    private readonly noticeUserMessageRepository;
    private readonly noticeUserMessageTemplateRepository;
    private readonly noticeAdminRepository;
    private readonly noticeAdminMessageRepository;
    private readonly noticeAdminMessageTemplateRepository;
    constructor(noticePopupRepository: Repository<NoticePopup>, noticeUserRepository: Repository<NoticeUser>, noticeUserMessageRepository: Repository<NoticeMessageUser>, noticeUserMessageTemplateRepository: Repository<NoticeMessageTemplateUser>, noticeAdminRepository: Repository<NoticeAdmin>, noticeAdminMessageRepository: Repository<NoticeMessageAdmin>, noticeAdminMessageTemplateRepository: Repository<NoticeMessageTemplateAdmin>);
    noticePopupList(body: any, token: any): Promise<object>;
    noticePopupUpsert(noticePopupUpsertDto: NoticePopupUpsertDto, token: any): Promise<object>;
    noticePopupDelete(body: any, token: any): Promise<object>;
    noticeUserList(body: any, token: any): Promise<object>;
    noticeUserUpsert(noticeUserUpsertDto: NoticeUserUpsertDto, token: any): Promise<object>;
    noticeUserDelete(body: any, token: any): Promise<object>;
    noticeUserMessageList(body: any, token: any): Promise<object>;
    noticeUserMessageUpsert(noticeUserMessageUpsertDto: NoticeUserMessageUpsertDto, token: any): Promise<object>;
    noticeUserMessageDelete(body: any, token: any): Promise<object>;
    noticeUserMessageTemplateList(body: any, token: any): Promise<object>;
    noticeUserMessageTemplateUpsert(noticeMessageTemplateUpsertDto: NoticeMessageTemplateUpsertDto, token: any): Promise<object>;
    noticeUserMessageTemplateDelete(body: any, token: any): Promise<object>;
    noticeAdminList(body: any, token: any): Promise<object>;
    noticeAdminUpsert(noticeAdminUpsertDto: NoticeAdminUpsertDto, token: any): Promise<object>;
    noticeAdminDelete(body: any, token: any): Promise<object>;
    noticeAdminMessageList(body: any, token: any): Promise<object>;
    noticeAdminMessageUpsert(noticeAdminMessageUpsertDto: NoticeAdminMessageUpsertDto, token: any): Promise<object>;
    noticeAdminMessageDelete(body: any, token: any): Promise<object>;
    noticeAdminMessageTemplateList(body: any, token: any): Promise<object>;
    noticeAdminMessageTemplateUpsert(noticeMessageTemplateUpsertDto: NoticeMessageTemplateUpsertDto, token: any): Promise<object>;
    noticeAdminMessageTemplateDelete(body: any, token: any): Promise<object>;
}
